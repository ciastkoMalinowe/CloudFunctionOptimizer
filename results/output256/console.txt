./run.sh ../dags/dag-aws-with-id.json ../output256 AWS 3 256
Dag path: ../dags/dag-aws-with-id.json
Logs dir is: ../output256
Provider: AWS
Function types : 256
Executing workflow for type: 256
Saving to ./../output256/logs_256_1.txt
Saving to ./../output256/logs_256_2.txt
Saving to ./../output256/logs_256_3.txt
./run_workflow.sh ../dags/dag-aws-with-id.json ./../output256 AWS 256 3
Normalize timestamps
node ../dagscripts/normalizer.js ../output256/parsed ./../output256/logs_parsed.csv
Logs parsed! Output file is: ./../output256/logs_parsed.csv
Preparing dbws dag...
args: ../dags/dag-aws-with-id.json ./../output256/logs_parsed.csv ./../output256/dag-dbws.json
Will decorate with times
DAG file path is ../dags/dag-aws-with-id.json
CSV file path is ./../output256/logs_parsed.csv
node ../dagscripts/time-decorator.js ../dags/dag-aws-with-id.json ./../output256/logs_parsed.csv ./tmp-times.json
Decorated with times
Starting Application
Configuration {"budgetParameter":0.3,"deadlineParameter":0.7,"functionTypes":["256"],"overhead":0.043,"prices":{"256":4.17e-7}}
userDeadline: 50219
userBudget: 0.0008023080000000002
Saved decorated DAG file as ./../output256/dag-dbws.json
node --harmony ../app.js ./tmp-times.json ./../output256/dag-dbws.json
Dbws dag ready
./run_dbws.sh ../dags/dag-aws-with-id.json ./../output256/logs_parsed.csv ./../output256/dag-dbws.json
DBWS dag done! Path to dag: ./../output256/dag-dbws.json
Saving to ./../output256/logs_real_1.txt
Saving to ./../output256/logs_real_2.txt
Saving to ./../output256/logs_real_3.txt
./run_workflow.sh ./../output256/dag-dbws.json ./../output256 AWS real 3
Execution done!
Normalize real logs...
node ../dagscripts/normalizer.js ../output256/parsed ./../output256/logs_parsed_with_dbws.csv
Extracting times and prices...
parameters: ./../output256/dag-dbws.json ./../output256/logs_parsed_with_dbws.csv ./../output256/dag-extracted.json ./../output256/extracted_results.csv ./../output256/dbws_planned_execution.csv
node ../dagscripts/time-decorator.js ./../output256/dag-dbws.json ./../output256/logs_parsed_with_dbws.csv ./../output256/dag-extracted.json
DAG file path is ./../output256/dag-dbws.json
CSV file path is ./../output256/logs_parsed_with_dbws.csv
node ../dagscripts/extractor.js ./../output256/dag-extracted.json ./../output256/extracted_results.csv ./../output256/dbws_planned_execution.csv
Path to DAG is ./../output256/dag-extracted.json
Output CSV path is ./../output256/extracted_results.csv
Output timestamps CSV path is ./../output256/dbws_planned_execution.csv
Function types: 256
Type MaxFinishTime Price
256 50219 0.000802308
512 50219 0.000802308
1024 50219 0.000802308
real 48776 0.000773535
sdbws 46569 0.000802308
./extract.sh ./../output256/dag-dbws.json ./../output256/logs_parsed_with_dbws.csv ./../output256/dag-extracted.json ./../output256/extracted_results.csv ./../output256/dbws_planned_execution.csv
Done! Extracted times and prices: ./../output256/extracted_results.csv
Extracted planned dbws timestamps: ./../output256/dbws_planned_execution.csv
Extracting real avg timestamps
Path to DAG is ./../output256/dag-extracted.json
node ../dagscripts/extract-real-avg.js ./../output256/dag-extracted.json ./../output256/real_avg_execution.csv
DONE!