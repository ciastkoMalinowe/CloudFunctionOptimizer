./run.sh ../dags/dag-aws-with-id.json ../output2560 AWS 3 2560
Dag path: ../dags/dag-aws-with-id.json
Logs dir is: ../output2560
Provider: AWS
Function types : 2560
Executing workflow for type: 2560
Saving to ./../output2560/logs_2560_1.txt
Saving to ./../output2560/logs_2560_2.txt
Saving to ./../output2560/logs_2560_3.txt
./run_workflow.sh ../dags/dag-aws-with-id.json ./../output2560 AWS 2560 3
Normalize timestamps
node ../dagscripts/normalizer.js ../output2560/parsed ./../output2560/logs_parsed.csv
Logs parsed! Output file is: ./../output2560/logs_parsed.csv
Preparing dbws dag...
args: ../dags/dag-aws-with-id.json ./../output2560/logs_parsed.csv ./../output2560/dag-dbws.json
Will decorate with times
DAG file path is ../dags/dag-aws-with-id.json
CSV file path is ./../output2560/logs_parsed.csv
node ../dagscripts/time-decorator.js ../dags/dag-aws-with-id.json ./../output2560/logs_parsed.csv ./tmp-times.json
Decorated with times
Starting Application
Configuration {"budgetParameter":0.3,"deadlineParameter":0.7,"functionTypes":["2560"],"overhead":0.043,"prices":{"2560":0.000004168}}
userDeadline: 31218
userBudget: 0.003963767999999999
Saved decorated DAG file as ./../output2560/dag-dbws.json
node --harmony ../app.js ./tmp-times.json ./../output2560/dag-dbws.json
Dbws dag ready
./run_dbws.sh ../dags/dag-aws-with-id.json ./../output2560/logs_parsed.csv ./../output2560/dag-dbws.json
DBWS dag done! Path to dag: ./../output2560/dag-dbws.json
Saving to ./../output2560/logs_real_1.txt
Saving to ./../output2560/logs_real_2.txt
Saving to ./../output2560/logs_real_3.txt
./run_workflow.sh ./../output2560/dag-dbws.json ./../output2560 AWS real 3
Execution done!
Normalize real logs...
node ../dagscripts/normalizer.js ../output2560/parsed ./../output2560/logs_parsed_with_dbws.csv
Extracting times and prices...
parameters: ./../output2560/dag-dbws.json ./../output2560/logs_parsed_with_dbws.csv ./../output2560/dag-extracted.json ./../output2560/extracted_results.csv ./../output2560/dbws_planned_execution.csv
node ../dagscripts/time-decorator.js ./../output2560/dag-dbws.json ./../output2560/logs_parsed_with_dbws.csv ./../output2560/dag-extracted.json
DAG file path is ./../output2560/dag-dbws.json
CSV file path is ./../output2560/logs_parsed_with_dbws.csv
node ../dagscripts/extractor.js ./../output2560/dag-extracted.json ./../output2560/extracted_results.csv ./../output2560/dbws_planned_execution.csv
Path to DAG is ./../output2560/dag-extracted.json
Output CSV path is ./../output2560/extracted_results.csv
Output timestamps CSV path is ./../output2560/dbws_planned_execution.csv
Function types: 2560
Type MaxFinishTime Price
2560 31218 0.003963768
real 31710 0.004017952
sdbws 27001 0.003963768
./extract.sh ./../output2560/dag-dbws.json ./../output2560/logs_parsed_with_dbws.csv ./../output2560/dag-extracted.json ./../output2560/extracted_results.csv ./../output2560/dbws_planned_execution.csv
Done! Extracted times and prices: ./../output2560/extracted_results.csv
Extracted planned dbws timestamps: ./../output2560/dbws_planned_execution.csv
Extracting real avg timestamps
Path to DAG is ./../output2560/dag-extracted.json
node ../dagscripts/extract-real-avg.js ./../output2560/dag-extracted.json ./../output2560/real_avg_execution.csv
DONE!
